name: Deploy Latest Personal Website

on:
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    env:
      TF_VAR_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      TF_VAR_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      # TF_VAR_EC2_SSH: ${{ secrets.EC2_SSH }}
    steps:
      - uses: actions/checkout@v2
      - uses: alessiodionisi/setup-age-action@v1.3.0
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      - name: Terraform Init and Apply AKA Initialize EC2 instance
        id: terraform_init
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve
          # terraform apply -auto-approve -var="AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" -var="AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" 
          echo "heres the host"
          echo ::set-output name=ec2_instance_ip::$(terraform output ec2_instance_ip | sed 's/"//g')

      - name: Checkout Repo
        uses: actions/checkout@v2
        with: 
          path: git@github.com:AnthonyCalderaio/personal-website.git

    #   - name: Wait for 10 seconds
    #     run: sleep 10s
    #     shell: bash

    #   - name: Adding Known Hosts
    #     run: |
    #       mkdir -p ~/.ssh
    #       echo "${{ secrets.EC2_PRIVATE_SSH }}" >> ~/.ssh/id_rsa
    #       chmod 700 ~/.ssh/id_rsa
    #       echo "whats this? ${{steps.terraform_init.outputs.ec2_instance_ip}}"
    #       ssh-keyscan -H ${{steps.terraform_init.outputs.ec2_instance_ip}} >> ~/.ssh/known_hosts
    #   - name: Decrypt config
    #     run: | 
    #       echo "${{ secrets.AGE_PRIVATE_KEY_FILE }}" >> ./ML_API/key.txt
    #       cd ML_API
    #       age --decrypt -i key.txt EncryptedSecrets/env_secrets.age > env_secrets.py
    #       ls
    #   - name: Rsync ML_API to host
    #     run: 
    #       rsync -aHP -r ./ML_API ${{ secrets.EC2_USER }}@${{ steps.terraform_init.outputs.ec2_instance_ip }}:/home/${{ secrets.EC2_USER }}
